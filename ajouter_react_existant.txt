Ajouter React Ã  un site existant
1) 1 fois
2) plusieurs fois
3) toggle

Fichier 'index.html' :

<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>Add React in One Minute</title>
</head>

<body>

    <h2>Add React in One Minute</h2>
    <p>This page demonstrates using React with no build tooling.</p>
    <p>React is loaded as a script tag.</p>

    <!-- We will put our React component inside this div. -->
    <div id="like_button_container"></div>

    <!-- Load React. -->
    <!-- Note: when deploying, replace "development.js" with "production.min.js". -->
    <script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>

    <!-- Load our React component. -->
    <script src="like_button.js"></script>

</body>

</html>


1) Fchier 'like_button.js' :

    'use strict';

    const e = React.createElement;

    class LikeButton extends React.Component {
        constructor(props) {
            super(props);
            this.state = { liked: false };
        }

        render() {
            if (this.state.liked) {
                return 'You liked this.';
            }

            return e(
                'button', { onClick: () => this.setState({ liked: true }) },
                'Like'
            );
        }
    }

    const domContainer = document.querySelector('#like_button_container');
    ReactDOM.render(e(LikeButton), domContainer);


2) Fichier 'like_button.js' :

    'use strict';

    const e = React.createElement;

    class LikeButton extends React.Component {
        constructor(props) {
            super(props);
            this.state = { liked: false };
        }

        render() {
            if (this.state.liked) {
                return 'You liked comment number ' + this.props.commentID;
            }

            return e(
                'button', { onClick: () => this.setState({ liked: true }) },
                'Like'
            );
        }
    }

    // Find all DOM containers, and render Like buttons into them.
    document.querySelectorAll('.like_button_container')
        .forEach(domContainer => {
            // Read the comment ID from a data-* attribute.
            const commentID = parseInt(domContainer.dataset.commentid, 10);
            ReactDOM.render(
                e(LikeButton, { commentID: commentID }),
                domContainer
            );
        });


3) Fichier 'like_button.js' :

    'use strict';

    const e = React.createElement;

    class LikeButton extends React.Component {
        constructor(props) {
            super(props);
            this.state = { liked: false };
        }

        handleClick() {
            this.setState({
                liked: !this.state.liked
            })
        }

        render() {
            if (this.state.liked == true) {
                return e('button', { onClick: () => this.handleClick() },
                    'liked is true');
            }

            return e(
                'button', { onClick: () => this.handleClick() },
                'liked is false'
            );

        }
    }

    const domContainer = document.querySelector('#like_button_container');
    ReactDOM.render(e(LikeButton), domContainer);